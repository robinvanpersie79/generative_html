 ---webpage-start---  ---html-start--- <!DOCTYPE html> <html lang="en" > <head> <meta charset="UTF-8"> <title>CodePen - CSS CyberPunk Buttons (:hover to glitch ðŸ˜Ž)</title> <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css"> <link rel="stylesheet" href="./style.css"> </head> <body> <!-- partial:index.partial.html --> <button class="cybr-btn" style="--primary-hue: 0; --primary-shadow-hue: 180; --secondary-shadow-hue: 60;"><span class="cybr-btn__text" data-text="Cool_">Cool_</span><span class="cybr-btn__glitch"></span></button> <button class="cybr-btn" style="--primary-hue: 274; --primary-shadow-hue: 180; --secondary-shadow-hue: 60;"><span class="cybr-btn__text" data-text="Cyber_">Cyber_</span><span class="cybr-btn__glitch"></span></button> <button class="cybr-btn" style="--primary-hue: 298; --primary-shadow-hue: 180; --secondary-shadow-hue: 60;"><span class="cybr-btn__text" data-text="Punk_">Punk_</span><span class="cybr-btn__glitch"></span></button> <!-- partial --> <script  src="./script.js"></script> </body> </html>  ---html-end---  ---style.css--- @font-face { font-family: Cyber; src: url("https://assets.codepen.io/605876/Blender-Pro-Bold.otf"); font-display: swap; } * { box-sizing: border-box; } :root { --shimmy-distance: 5; --primary-hue: 0; --primary-lightness: 50; --color: #fff; --black: #0d0d0d; --font-size: 26px; --label-size: 9px; --shadow-primary-hue: 180; --shadow-secondary-hue: 60; } body { display: flex; align-items: center; flex-direction: column; justify-content: center; min-height: 100vh; font-family: 'Cyber', sans-serif; background: linear-gradient(90deg, #f5ed00 60%, #e6de00 60%), #fff700; } body > * + * { margin-top: 2rem; } .cybr-btn { --primary: hsl(var(--primary-hue), 85%, calc(var(--primary-lightness, 50) * 1%)); --shadow-primary: hsl(var(--shadow-primary-hue), 90%, 50%); --shadow-primary-alpha: hsla(var(--shadow-primary-hue), 90%, 50%, 0.5); --shadow-secondary: hsl(var(--shadow-secondary-hue), 90%, 60%); font-family: 'Cyber', sans-serif; position: relative; text-transform: uppercase; background: var(--primary); font-size: var(--font-size); outline: transparent; border: 0; min-width: 300px; -webkit-clip-path: polygon(-10% -10%, 110% -10%, 110% 110%, 10% 110%, -10% 40%); clip-path: polygon(-10% -10%, 110% -10%, 110% 110%, 10% 110%, -10% 40%); padding: 32px 64px; box-shadow: -2px 0 1px 0px inset var(--shadow-primary); transition: background 0.1s ease; } .cybr-btn *, .cybr-btn *:after { outline: transparent; } .cybr-btn:hover .cybr-btn__text:after, .cybr-btn:hover .cybr-btn__glitch:after { display: block; } .cybr-btn:hover { --primary-lightness: 40; } .cybr-btn:active { --primary-lightness: 30; } .cybr-btn__glitch { height: 100%; width: 100%; display: block; position: absolute; top: 0; left: 0; filter: drop-shadow(-2px 2px var(--shadow-primary)) drop-shadow(-1px -1px var(--shadow-primary-alpha)) drop-shadow(2px 2px var(--shadow-primary)); } .cybr-btn__glitch:after { display: none; background: var(--primary); -webkit-animation: shimmy-text 2s infinite alternate ease-in-out; animation: shimmy-text 2s infinite alternate ease-in-out; content: ''; height: 98%; width: 98%; position: absolute; top: 1%; left: 1%; } .cybr-btn__text { color: var(--color); display: block; height: 100%; width: 100%; position: relative; z-index: 2; white-space: nowrap; } .cybr-btn__text:after { display: none; top: 0; left: 0; width: 100%; height: 100%; position: absolute; content: attr(data-text); color: var(--color); filter: brightness(1); -webkit-animation: shimmy-text 2s infinite alternate ease-in-out; animation: shimmy-text 2s infinite alternate ease-in-out; text-shadow: 2px 2px var(--shadow-primary), -2px -2px var(--shadow-secondary); } .cybr-btn:after { content: 'R25'; position: absolute; padding: 10px; letter-spacing: 1px; padding: 1px 4px; line-height: 1; bottom: -5%; right: 5%; background: var(--shadow-secondary); color: var(--black); font-size: var(--label-size); box-shadow: 2px 0 1px 0 inset var(--shadow-primary); } @-webkit-keyframes shimmy-text { 0% { -webkit-clip-path: inset(2% 0 95% 0); clip-path: inset(2% 0 95% 0); } 2%, 8% { -webkit-clip-path: inset(78% 0 0 0); clip-path: inset(78% 0 0 0); transform: translate(calc(var(--shimmy-distance) * -1%), 0); } 6% { -webkit-clip-path: inset(78% 0 0 0); clip-path: inset(78% 0 0 0); transform: translate(calc(var(--shimmy-distance) * 1%), 0); } 9% { -webkit-clip-path: inset(78% 0 0 0); clip-path: inset(78% 0 0 0); transform: translate(0, 0); } 10% { -webkit-clip-path: inset(44% 0 46% 0); clip-path: inset(44% 0 46% 0); transform: translate(calc(var(--shimmy-distance) * 1%), 0); } 13% { -webkit-clip-path: inset(44% 0 46% 0); clip-path: inset(44% 0 46% 0); transform: translate(0, 0); } 14%, 21% { -webkit-clip-path: inset(0 0 100% 0); clip-path: inset(0 0 100% 0); transform: translate(calc(var(--shimmy-distance) * 1%), 0); } 15%, 20% { -webkit-clip-path: inset(40% 0 60% 0); clip-path: inset(40% 0 60% 0); transform: translate(calc(var(--shimmy-distance) * 1%), 0); } 25% { -webkit-clip-path: inset(40% 0 15% 0); clip-path: inset(40% 0 15% 0); transform: translate(calc(var(--shimmy-distance) * 1%), 0); } 30% { -webkit-clip-path: inset(40% 0 15% 0); clip-path: inset(40% 0 15% 0); transform: translate(calc(var(--shimmy-distance) * -1%), 0); } 35%, 45% { -webkit-clip-path: inset(63% 0 20% 0); clip-path: inset(63% 0 20% 0); transform: translate(calc(var(--shimmy-distance) * -1%)); } 40% { -webkit-clip-path: inset(63% 0 20% 0); clip-path: inset(63% 0 20% 0); transform: translate(calc(var(--shimmy-distance) * 1%)); } 50% { -webkit-clip-path: inset(63% 0 20% 0); clip-path: inset(63% 0 20% 0); transform: translate(0, 0); } 55% { -webkit-clip-path: inset(0 0 90% 0); clip-path: inset(0 0 90% 0); transform: translate(calc(var(--shimmy-distance) * 1%), 0); } 60% { -webkit-clip-path: inset(0 0 90% 0); clip-path: inset(0 0 90% 0); transform: translate(0, 0); } 31%, 61%, 100% { -webkit-clip-path: inset(0 0 100% 0); clip-path: inset(0 0 100% 0); } } @keyframes shimmy-text { 0% { -webkit-clip-path: inset(2% 0 95% 0); clip-path: inset(2% 0 95% 0); } 2%, 8% { -webkit-clip-path: inset(78% 0 0 0); clip-path: inset(78% 0 0 0); transform: translate(calc(var(--shimmy-distance) * -1%), 0); } 6% { -webkit-clip-path: inset(78% 0 0 0); clip-path: inset(78% 0 0 0); transform: translate(calc(var(--shimmy-distance) * 1%), 0); } 9% { -webkit-clip-path: inset(78% 0 0 0); clip-path: inset(78% 0 0 0); transform: translate(0, 0); } 10% { -webkit-clip-path: inset(44% 0 46% 0); clip-path: inset(44% 0 46% 0); transform: translate(calc(var(--shimmy-distance) * 1%), 0); } 13% { -webkit-clip-path: inset(44% 0 46% 0); clip-path: inset(44% 0 46% 0); transform: translate(0, 0); } 14%, 21% { -webkit-clip-path: inset(0 0 100% 0); clip-path: inset(0 0 100% 0); transform: translate(calc(var(--shimmy-distance) * 1%), 0); } 15%, 20% { -webkit-clip-path: inset(40% 0 60% 0); clip-path: inset(40% 0 60% 0); transform: translate(calc(var(--shimmy-distance) * 1%), 0); } 25% { -webkit-clip-path: inset(40% 0 15% 0); clip-path: inset(40% 0 15% 0); transform: translate(calc(var(--shimmy-distance) * 1%), 0); } 30% { -webkit-clip-path: inset(40% 0 15% 0); clip-path: inset(40% 0 15% 0); transform: translate(calc(var(--shimmy-distance) * -1%), 0); } 35%, 45% { -webkit-clip-path: inset(63% 0 20% 0); clip-path: inset(63% 0 20% 0); transform: translate(calc(var(--shimmy-distance) * -1%)); } 40% { -webkit-clip-path: inset(63% 0 20% 0); clip-path: inset(63% 0 20% 0); transform: translate(calc(var(--shimmy-distance) * 1%)); } 50% { -webkit-clip-path: inset(63% 0 20% 0); clip-path: inset(63% 0 20% 0); transform: translate(0, 0); } 55% { -webkit-clip-path: inset(0 0 90% 0); clip-path: inset(0 0 90% 0); transform: translate(calc(var(--shimmy-distance) * 1%), 0); } 60% { -webkit-clip-path: inset(0 0 90% 0); clip-path: inset(0 0 90% 0); transform: translate(0, 0); } 31%, 61%, 100% { -webkit-clip-path: inset(0 0 100% 0); clip-path: inset(0 0 100% 0); } }  ---css-end---  ---webpage-end---
