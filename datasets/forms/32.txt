 ---webpage-start---  ---html-start---  ---index.html--- <!DOCTYPE html> <html > <head> <meta charset="UTF-8"> <title>React DailyUI - 001 - Sign Up</title> <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css"> <link rel='stylesheet prefetch' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css'> <link rel="stylesheet" href="css/style.css"> </head> <body> <div id="app"></div> <script src='https://fb.me/react-with-addons-0.14.7.js'></script> <script src='https://npmcdn.com/react-dom@15.3.0/dist/react-dom.min.js'></script> <script src='https://cdnjs.cloudflare.com/ajax/libs/zepto/1.1.6/zepto.min.js'></script> <script src="js/index.js"></script> </body> </html>  ---html-end---  ---css-start---  ---style.css--- @import "https://fonts.googleapis.com/css?family=Lato:100,300,400,700,900"; body { background-image: url(https://unsplash.it/1400/799); background-position: center; background-repeat: no-repeat; background-size: cover; color: #3E363F; font-family: "Lato", sans-serif; height: 100vh; overflow: hidden; } .App { -webkit-box-align: center; -ms-flex-align: center; align-items: center; display: -webkit-box; display: -ms-flexbox; display: flex; height: 100vh; -webkit-box-pack: center; -ms-flex-pack: center; justify-content: center; width: 100vw; position: absolute; top: 0; left: 0; } .Modal { background: #3E363F; border-radius: 2px; padding: 20px; width: 200px; } .Input { display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-orient: horizontal; -webkit-box-direction: reverse; -ms-flex-direction: row-reverse; flex-direction: row-reverse; border-bottom: 1px solid rgba(255, 252, 232, 0.1); padding-bottom: 3px; margin-bottom: 5px; } .Input input { outline: none; border: 0; color: #FFFCE8; background: transparent; font-family: "Lato", sans-serif; -webkit-box-flex: 1; -ms-flex: 1 0 auto; flex: 1 0 auto; font-size: 14px; font-weight: 300; } .Input input:focus ~ label { opacity: 1; } .Input input[type='text'] ~ label::before { content: "\f007"; } .Input input[type='email'] ~ label::before { content: "\f1fa"; } .Input input[type='password'] ~ label::before { content: "\f023"; } .Input label { font-family: FontAwesome; font-size: 13px; opacity: .1; -webkit-transition: opacity .5s ease; transition: opacity .5s ease; } .Input label::before { -webkit-box-align: center; -ms-flex-align: center; align-items: center; color: #FFFCE8; display: -webkit-box; display: -ms-flexbox; display: flex; height: 30px; -webkit-box-pack: center; -ms-flex-pack: center; justify-content: center; width: 30px; } button { -webkit-box-align: center; -ms-flex-align: center; align-items: center; background: #DD403A; border: 0; border-radius: 3px; color: white; display: -webkit-box; display: -ms-flexbox; display: flex; font-family: "Lato", sans-serif; font-size: 13px; font-weight: 500; -webkit-box-pack: center; -ms-flex-pack: center; justify-content: center; margin-top: 20px; outline: none; padding: 10px 9px 10px 11px; text-transform: uppercase; width: 100%; } button .fa { font-size: 12px; margin-left: auto; position: relative; top: 1px; } button:hover { -webkit-transform: scale(1.02); transform: scale(1.02); } button:active { -webkit-transform: scale(0.99); transform: scale(0.99); } .example-enter { margin-top: 30px; opacity: .01; } .example-enter.example-enter-active { margin-top: 0px; opacity: 1; -webkit-transition: opacity .5s ease, margin .5s ease; transition: opacity .5s ease, margin .5s ease; } .example-leave { margin-top: 0px; opacity: 1; } .example-leave.example-leave-active { margin-top: -30px; opacity: .01; -webkit-transition: opacity .3s ease, margin .5s ease; transition: opacity .3s ease, margin .5s ease; }  ---css-end---  ---js-start---  ---index.js--- "use strict"; var ReactCSSTransitionGroup = React.addons.CSSTransitionGroup; var Input = React.createClass({ displayName: "Input", render: function render() { return React.createElement( "div", { className: "Input" }, React.createElement("input", { id: this.props.name, autocomplete: "false", required: true, type: this.props.type, placeholder: this.props.placeholder }), React.createElement("label", { "for": this.props.name }) ); } }); var Modal = React.createClass({ displayName: "Modal", render: function render() { return React.createElement( "div", { className: "Modal" }, React.createElement( "form", { onSubmit: this.props.onSubmit, className: "ModalForm" }, React.createElement(Input, { id: "name", type: "text", placeholder: "Jack-Edward Oliver" }), React.createElement(Input, { id: "username", type: "email", placeholder: "mrjackolai@gmail.com" }), React.createElement(Input, { id: "password", type: "password", placeholder: "password" }), React.createElement( "button", null, "Log in ", React.createElement("i", { className: "fa fa-fw fa-chevron-right" }) ) ) ); } }); var App = React.createClass({ displayName: "App", getInitialState: function getInitialState() { return { mounted: false }; }, componentDidMount: function componentDidMount() { this.setState({ mounted: true }); }, handleSubmit: function handleSubmit(e) { this.setState({ mounted: false }); e.preventDefault(); }, render: function render() { var child; if (this.state.mounted) { child = React.createElement(Modal, { onSubmit: this.handleSubmit }); } return React.createElement( "div", { className: "App" }, React.createElement( ReactCSSTransitionGroup, { transitionName: "example", transitionEnterTimeout: 500, transitionLeaveTimeout: 300 }, child ) ); } }); ReactDOM.render(React.createElement(App, null), document.getElementById('app'));  ---js-end---  ---scss-start---  ---style.scss--- // Fonts @import 'https://fonts.googleapis.com/css?family=Lato:100,300,400,700,900'; // Variables $font: 'Lato', sans-serif; // Colors $onyx: #3E363F; $cinnabar: #DD403A; $cosmiclatte: #FFFCE8; // Styles body { background-image: url(https://unsplash.it/1400/799); background-position: center; background-repeat: no-repeat; background-size: cover; color: $onyx; font-family: $font; height: 100vh; overflow: hidden; } .App { align-items: center; display: flex; height: 100vh; justify-content: center; width: 100vw; position: absolute; top: 0; left: 0; } .Modal { background: $onyx; border-radius: 2px; padding: 20px; width: 200px; } // Inputs .Input { display: flex; flex-direction: row-reverse; border-bottom: 1px solid rgba($cosmiclatte, .1); padding-bottom: 3px; margin-bottom: 5px; input { // General styles outline: none; border: 0; color: $cosmiclatte; background: transparent; font-family: $font; flex: 1 0 auto; font-size: 14px; font-weight: 300; // Animation triggers &:focus ~ label { opacity: 1; } // Icon abstractions &[type='text'] { ~ label { &::before { content: "\f007"; } } } &[type='email'] { ~ label { &::before { content: "\f1fa"; } } } &[type='password'] { ~ label { &::before { content: "\f023"; } } } } label { font-family: FontAwesome; font-size: 13px; opacity: .1; transition: opacity .5s ease; &::before { align-items: center; color: $cosmiclatte; display: flex; height: 30px; justify-content: center; width: 30px; } } } // Button button { align-items: center; background: $cinnabar; border: 0; border-radius: 3px; color: white; display: flex; font-family: $font; font-size: 13px; font-weight: 500; justify-content: center; margin-top: 20px; outline: none; padding: 10px 9px 10px 11px; text-transform: uppercase; width: 100%; .fa { font-size: 12px; margin-left: auto; position: relative; top: 1px; } &:hover { transform: scale(1.02); } &:active { transform: scale(.99); } } // Animation Classes .example-enter { margin-top: 30px; opacity: .01; &.example-enter-active { margin-top: 0px; opacity: 1; transition: opacity .5s ease, margin .5s ease; } } .example-leave { margin-top: 0px; opacity: 1; &.example-leave-active { margin-top: -30px; opacity: .01; transition: opacity .3s ease, margin .5s ease; } }  ---scss-end---  ---webpage-end---
